name: Cost Monitoring

on:
  schedule:
    # Run daily at 8 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch:

env:
  COMPUTE_RESOURCE_GROUP: pathfinder-rg
  DATA_RESOURCE_GROUP: pathfinder-db-rg

jobs:
  cost-analysis:
    runs-on: ubuntu-latest
    
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Get Cost Data
        run: |
          # Get current month costs
          START_DATE=$(date -d "$(date +%Y-%m-01)" +%Y-%m-%d)
          END_DATE=$(date +%Y-%m-%d)
          
          echo "📊 Getting cost data from $START_DATE to $END_DATE"
          
          # Get compute layer costs
          COMPUTE_COST=$(az consumption usage list \
            --start-date $START_DATE \
            --end-date $END_DATE \
            --query "[?instanceName=='$COMPUTE_RESOURCE_GROUP'].pretaxCost | [0]" \
            -o tsv || echo "0")
          
          # Get data layer costs  
          DATA_COST=$(az consumption usage list \
            --start-date $START_DATE \
            --end-date $END_DATE \
            --query "[?instanceName=='$DATA_RESOURCE_GROUP'].pretaxCost | [0]" \
            -o tsv || echo "0")
          
          TOTAL_COST=$(echo "$COMPUTE_COST + $DATA_COST" | bc)
          
          echo "💰 Cost Summary:"
          echo "   Compute Layer: \$$COMPUTE_COST"
          echo "   Data Layer: \$$DATA_COST"
          echo "   Total: \$$TOTAL_COST"
          
          # Set budget threshold ($100/month)
          BUDGET_THRESHOLD=100
          
          if (( $(echo "$TOTAL_COST > $BUDGET_THRESHOLD" | bc -l) )); then
            echo "⚠️ BUDGET ALERT: Current cost (\$$TOTAL_COST) exceeds threshold (\$$BUDGET_THRESHOLD)"
            echo "BUDGET_EXCEEDED=true" >> $GITHUB_ENV
          fi
          
          # Save to file for reporting
          cat > cost-report.json << EOF
          {
            "date": "$(date +%Y-%m-%d)",
            "compute_cost": $COMPUTE_COST,
            "data_cost": $DATA_COST,
            "total_cost": $TOTAL_COST,
            "budget_threshold": $BUDGET_THRESHOLD,
            "budget_exceeded": ${BUDGET_EXCEEDED:-false}
          }
          EOF
      
      - name: Send Budget Alert
        if: env.BUDGET_EXCEEDED == 'true'
        run: |
          echo "🚨 Sending budget alert notification"
          echo "Consider pausing the compute layer to reduce costs:"
          echo "   Go to Actions → Pause/Resume Environment → Run workflow → Select 'pause'"
      
      - name: Resource Optimization Suggestions
        run: |
          echo "💡 Cost Optimization Suggestions:"
          echo ""
          echo "1. Pause Environment:"
          echo "   - Saves: ~\$35-50/month"
          echo "   - Command: Use pause-resume workflow"
          echo ""
          echo "2. Scale Down Resources:"
          echo "   - Container Apps: Already scale-to-zero"
          echo "   - SQL Database: Consider Basic tier"
          echo "   - Cosmos DB: Using serverless mode"
          echo ""
          echo "3. Review Usage:"
          echo "   - Monitor Application Insights"
          echo "   - Check storage usage"
          echo "   - Review compute metrics"
