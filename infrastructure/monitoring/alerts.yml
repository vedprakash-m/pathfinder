# Pathfinder Production Monitoring & Alerting Configuration
# This file defines monitoring rules and alerts for the Pathfinder platform

# Health Check Monitoring
health_checks:
  endpoints:
    - name: "basic_health"
      url: "/health"
      interval: "30s"
      timeout: "5s"
      expected_status: 200
      expected_response:
        status: "ok"
      
    - name: "readiness_check"
      url: "/health/ready"
      interval: "60s"
      timeout: "10s"
      expected_status: 200
      expected_response:
        status: "ok"
      
    - name: "detailed_health"
      url: "/health/detailed"
      interval: "300s"
      timeout: "30s"
      expected_status: 200
      alerts:
        - condition: "status != 'healthy'"
          severity: "warning"
          message: "Service health degraded"
        - condition: "details.system.cpu_percent > 80"
          severity: "warning"
          message: "High CPU usage detected"
        - condition: "details.system.memory_percent > 80"
          severity: "warning"
          message: "High memory usage detected"
        - condition: "details.database.response_time_ms > 1000"
          severity: "critical"
          message: "Database response time too slow"

# Application Performance Monitoring
apm:
  metrics:
    - name: "response_time"
      threshold: "2000ms"
      severity: "warning"
      
    - name: "error_rate"
      threshold: "5%"
      severity: "critical"
      
    - name: "throughput"
      minimum: "10 req/min"
      severity: "warning"

# Database Monitoring
database:
  connection_pool:
    max_connections: 50
    alert_threshold: 40
    severity: "warning"
    
  query_performance:
    slow_query_threshold: "1000ms"
    severity: "warning"
    
  disk_space:
    warning_threshold: "80%"
    critical_threshold: "90%"

# AI Service Monitoring
ai_services:
  cost_tracking:
    daily_budget: 50.0
    alert_thresholds:
      - threshold: "70%"
        severity: "warning"
        message: "AI daily budget 70% consumed"
      - threshold: "90%"
        severity: "critical"
        message: "AI daily budget 90% consumed"
      - threshold: "100%"
        severity: "critical"
        message: "AI daily budget exceeded"
        
  response_time:
    warning_threshold: "10s"
    critical_threshold: "30s"
    
  error_rate:
    warning_threshold: "10%"
    critical_threshold: "25%"

# Infrastructure Monitoring
infrastructure:
  container_apps:
    cpu_utilization:
      warning: "70%"
      critical: "85%"
      
    memory_utilization:
      warning: "75%"
      critical: "90%"
      
    instance_count:
      minimum: 1
      maximum: 10
      
  azure_sql:
    dtu_utilization:
      warning: "70%"
      critical: "85%"
      
    storage_utilization:
      warning: "80%"
      critical: "90%"
      
    connection_count:
      warning: "80% of max"
      critical: "95% of max"

# Business Logic Monitoring
business_metrics:
  user_activity:
    - name: "active_users_daily"
      minimum: 1
      severity: "info"
      
    - name: "trip_creation_rate"
      minimum: "1 per day"
      severity: "info"
      
  data_integrity:
    - name: "orphaned_records"
      maximum: 0
      severity: "warning"
      
    - name: "data_consistency_checks"
      interval: "daily"
      severity: "critical"

# Security Monitoring
security:
  authentication:
    failed_login_attempts:
      threshold: "10 per hour per IP"
      severity: "warning"
      
    suspicious_activity:
      threshold: "100 requests per minute per IP"
      severity: "critical"
      
  api_security:
    rate_limit_violations:
      threshold: "50 per hour"
      severity: "warning"
      
    csrf_failures:
      threshold: "10 per hour"
      severity: "warning"

# Notification Configuration
notifications:
  channels:
    - type: "email"
      recipients:
        - "admin@pathfinder.com"
        - "alerts@pathfinder.com"
      severity_filter: ["warning", "critical"]
      
    - type: "slack"
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#pathfinder-alerts"
      severity_filter: ["critical"]
      
    - type: "pagerduty"
      integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
      severity_filter: ["critical"]

# Escalation Rules
escalation:
  rules:
    - name: "critical_alerts"
      conditions:
        - severity: "critical"
        - duration: "5m"
      actions:
        - notify: ["email", "slack", "pagerduty"]
        - auto_scale: true
        
    - name: "warning_alerts"
      conditions:
        - severity: "warning"
        - duration: "15m"
      actions:
        - notify: ["email"]
        
    - name: "persistent_warnings"
      conditions:
        - severity: "warning"
        - duration: "1h"
      actions:
        - notify: ["email", "slack"]
        - escalate_to: "critical"

# Maintenance Windows
maintenance:
  scheduled_windows:
    - name: "weekly_maintenance"
      schedule: "Sunday 02:00-04:00 UTC"
      suppress_alerts: true
      
    - name: "deployment_window"
      schedule: "on-demand"
      duration: "30m"
      suppress_alerts: ["warning"]

# Log Monitoring
logs:
  error_patterns:
    - pattern: "ERROR"
      threshold: "10 per hour"
      severity: "warning"
      
    - pattern: "CRITICAL"
      threshold: "1 per hour"
      severity: "critical"
      
    - pattern: "Database connection failed"
      threshold: "1 per 5 minutes"
      severity: "critical"
      
  performance_patterns:
    - pattern: "Slow query detected"
      threshold: "5 per hour"
      severity: "warning"
      
    - pattern: "High memory usage"
      threshold: "3 per hour"
      severity: "warning"

# Synthetic Monitoring
synthetic_tests:
  user_journeys:
    - name: "user_registration_flow"
      frequency: "15m"
      timeout: "60s"
      steps:
        - action: "visit_homepage"
        - action: "click_register"
        - action: "fill_form"
        - action: "submit_registration"
      alerts:
        - condition: "failure"
          severity: "critical"
          
    - name: "trip_creation_flow"
      frequency: "30m"
      timeout: "120s"
      steps:
        - action: "login"
        - action: "create_trip"
        - action: "add_participants"
        - action: "save_trip"
      alerts:
        - condition: "failure"
          severity: "warning"

# Backup and Recovery Monitoring
backup:
  database_backups:
    frequency: "daily"
    retention: "30 days"
    alerts:
      - condition: "backup_failed"
        severity: "critical"
      - condition: "backup_size_anomaly"
        severity: "warning"
        
  disaster_recovery:
    rto_target: "4 hours"
    rpo_target: "1 hour"
    test_frequency: "monthly"
    alerts:
      - condition: "dr_test_failed"
        severity: "critical" 