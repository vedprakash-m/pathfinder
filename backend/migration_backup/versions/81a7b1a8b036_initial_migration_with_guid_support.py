"""Initial migration with GUID support

Revision ID: 81a7b1a8b036
Revises:
Create Date: 2025-05-25 20:08:00.975953

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "81a7b1a8b036"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "families",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("preferences", sa.Text(), nullable=True),
        sa.Column("emergency_contact", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("auth0_id", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("profile_picture_url", sa.Text(), nullable=True),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("preferences", sa.Text(), nullable=True),
        sa.Column("emergency_contact", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_auth0_id"), "users", ["auth0_id"], unique=True)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "family_members",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("family_id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column(
            "role",
            sa.Enum(
                "HEAD",
                "SPOUSE",
                "CHILD",
                "PARENT",
                "SIBLING",
                "RELATIVE",
                "FRIEND",
                name="familymemberrole",
            ),
            nullable=False,
        ),
        sa.Column("special_needs", sa.Text(), nullable=True),
        sa.Column("dietary_restrictions", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["family_id"],
            ["families.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trips",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("destination", sa.String(length=255), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PLANNING",
                "CONFIRMED",
                "IN_PROGRESS",
                "COMPLETED",
                "CANCELLED",
                name="tripstatus",
            ),
            nullable=True,
        ),
        sa.Column("budget_total", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("creator_id", sa.String(length=36), nullable=False),
        sa.Column("preferences", sa.Text(), nullable=True),
        sa.Column("itinerary_data", sa.Text(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "itineraries",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("trip_id", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "DRAFT",
                "GENERATING",
                "READY",
                "APPROVED",
                "MODIFIED",
                "ARCHIVED",
                name="itinerarystatus",
            ),
            nullable=True,
        ),
        sa.Column("generation_prompt", sa.Text(), nullable=True),
        sa.Column("ai_model_used", sa.String(length=100), nullable=True),
        sa.Column("generation_cost", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("generation_tokens", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        sa.Column("approved_by", sa.String(length=36), nullable=True),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trip_id"],
            ["trips.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "TRIP_INVITATION",
                "TRIP_UPDATE",
                "ITINERARY_READY",
                "ITINERARY_UPDATE",
                "FAMILY_INVITATION",
                "RESERVATION_CONFIRMED",
                "RESERVATION_CANCELLED",
                "SYSTEM_ANNOUNCEMENT",
                "CHAT_MESSAGE",
                name="notificationtype",
            ),
            nullable=False,
        ),
        sa.Column(
            "priority",
            sa.Enum("LOW", "NORMAL", "HIGH", "URGENT", name="notificationpriority"),
            nullable=True,
        ),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("trip_id", sa.String(length=36), nullable=True),
        sa.Column("family_id", sa.String(length=36), nullable=True),
        sa.Column("is_read", sa.Boolean(), nullable=True),
        sa.Column("read_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.Column("data", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["family_id"],
            ["families.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trip_id"],
            ["trips.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reservations",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("trip_id", sa.String(length=36), nullable=False),
        sa.Column("family_id", sa.String(length=36), nullable=False),
        sa.Column("created_by", sa.String(length=36), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "ACCOMMODATION",
                "RESTAURANT",
                "ACTIVITY",
                "ATTRACTION",
                "TRANSPORTATION",
                "RENTAL_CAR",
                "FLIGHT",
                "EVENT",
                "TOUR",
                "CUSTOM",
                name="reservationtype",
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "CONFIRMED",
                "CANCELLED",
                "COMPLETED",
                "NO_SHOW",
                "REFUNDED",
                name="reservationstatus",
            ),
            nullable=True,
        ),
        sa.Column(
            "payment_status",
            sa.Enum(
                "UNPAID",
                "PARTIALLY_PAID",
                "PAID",
                "REFUNDED",
                "FAILED",
                name="paymentstatus",
            ),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("provider_name", sa.String(length=200), nullable=True),
        sa.Column("location_name", sa.String(length=200), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("latitude", sa.Numeric(precision=10, scale=8), nullable=True),
        sa.Column("longitude", sa.Numeric(precision=11, scale=8), nullable=True),
        sa.Column("google_place_id", sa.String(length=255), nullable=True),
        sa.Column("check_in", sa.DateTime(), nullable=True),
        sa.Column("check_out", sa.DateTime(), nullable=True),
        sa.Column("duration_hours", sa.Integer(), nullable=True),
        sa.Column("number_of_guests", sa.Integer(), nullable=False),
        sa.Column("number_of_rooms", sa.Integer(), nullable=True),
        sa.Column("cost_per_person", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total_cost", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=True),
        sa.Column("confirmation_number", sa.String(length=100), nullable=True),
        sa.Column("booking_reference", sa.String(length=100), nullable=True),
        sa.Column("booking_url", sa.Text(), nullable=True),
        sa.Column("booking_email", sa.String(length=200), nullable=True),
        sa.Column("booking_phone", sa.String(length=20), nullable=True),
        sa.Column(
            "cancellation_policy",
            sa.Enum(
                "FLEXIBLE",
                "MODERATE",
                "STRICT",
                "NON_REFUNDABLE",
                name="cancellationpolicy",
            ),
            nullable=True,
        ),
        sa.Column("cancellation_deadline", sa.DateTime(), nullable=True),
        sa.Column("terms_and_conditions", sa.Text(), nullable=True),
        sa.Column("deposit_amount", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("deposit_paid_at", sa.DateTime(), nullable=True),
        sa.Column("full_payment_due", sa.DateTime(), nullable=True),
        sa.Column("payment_method", sa.String(length=50), nullable=True),
        sa.Column("special_requests", sa.Text(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("confirmation_email_sent", sa.Boolean(), nullable=True),
        sa.Column("reminder_sent", sa.Boolean(), nullable=True),
        sa.Column("external_booking_id", sa.String(length=100), nullable=True),
        sa.Column("external_provider", sa.String(length=100), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("cancelled_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["family_id"],
            ["families.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trip_id"],
            ["trips.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trip_participations",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("trip_id", sa.String(length=36), nullable=False),
        sa.Column("family_id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "INVITED",
                "CONFIRMED",
                "DECLINED",
                "PENDING",
                name="participationstatus",
            ),
            nullable=True,
        ),
        sa.Column(
            "budget_allocation", sa.Numeric(precision=10, scale=2), nullable=True
        ),
        sa.Column("preferences", sa.Text(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "joined_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["family_id"],
            ["families.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trip_id"],
            ["trips.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "itinerary_days",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("itinerary_id", sa.String(length=36), nullable=False),
        sa.Column("day_number", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("title", sa.String(length=200), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("estimated_cost", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("driving_time_minutes", sa.Integer(), nullable=True),
        sa.Column(
            "driving_distance_km", sa.Numeric(precision=8, scale=2), nullable=True
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["itinerary_id"],
            ["itineraries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reservation_documents",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("reservation_id", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("document_type", sa.String(length=50), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=True),
        sa.Column("file_url", sa.Text(), nullable=True),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("mime_type", sa.String(length=100), nullable=True),
        sa.Column("uploaded_by", sa.String(length=36), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["reservation_id"],
            ["reservations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["uploaded_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "itinerary_activities",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("day_id", sa.String(length=36), nullable=False),
        sa.Column("sequence_order", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "ACCOMMODATION",
                "DINING",
                "ATTRACTION",
                "ENTERTAINMENT",
                "SHOPPING",
                "OUTDOOR",
                "CULTURAL",
                "ADVENTURE",
                "RELAXATION",
                "TRANSPORTATION",
                "CUSTOM",
                name="activitytype",
            ),
            nullable=False,
        ),
        sa.Column(
            "difficulty",
            sa.Enum(
                "EASY", "MODERATE", "CHALLENGING", "EXPERT", name="difficultylevel"
            ),
            nullable=True,
        ),
        sa.Column("location_name", sa.String(length=200), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("latitude", sa.Numeric(precision=10, scale=8), nullable=True),
        sa.Column("longitude", sa.Numeric(precision=11, scale=8), nullable=True),
        sa.Column("google_place_id", sa.String(length=255), nullable=True),
        sa.Column("start_time", sa.Time(), nullable=True),
        sa.Column("end_time", sa.Time(), nullable=True),
        sa.Column("duration_minutes", sa.Integer(), nullable=True),
        sa.Column(
            "estimated_cost_per_person",
            sa.Numeric(precision=10, scale=2),
            nullable=True,
        ),
        sa.Column("booking_required", sa.Boolean(), nullable=True),
        sa.Column("booking_url", sa.Text(), nullable=True),
        sa.Column("booking_phone", sa.String(length=20), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("website_url", sa.Text(), nullable=True),
        sa.Column("image_url", sa.Text(), nullable=True),
        sa.Column("is_optional", sa.Boolean(), nullable=True),
        sa.Column("is_customized", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["day_id"],
            ["itinerary_days.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("itinerary_activities")
    op.drop_table("reservation_documents")
    op.drop_table("itinerary_days")
    op.drop_table("trip_participations")
    op.drop_table("reservations")
    op.drop_table("notifications")
    op.drop_table("itineraries")
    op.drop_table("trips")
    op.drop_table("family_members")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_auth0_id"), table_name="users")
    op.drop_table("users")
    op.drop_table("families")
    # ### end Alembic commands ###
